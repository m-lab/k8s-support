apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  strategy:
    # This must be Recreate, because you can't do a RollingUpdate on a
    # single-replica ReplicaSet that can only deploy to one very specific node.
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus-server
      annotations:
        # Tell prometheus service discovery to scrape the pod containers.
        prometheus.io/scrape: 'true'
    spec:
      serviceAccountName: prometheus
      nodeSelector:
        mlab/type: cloud
        run: "prometheus-server"
      containers:
      - name: prometheus
        image: prom/prometheus:v2.4.2
        # TODO: enable longer retention once persistent volumes are available.
        #      "--storage.tsdb.retention=2880h",
        args: ["--config.file=/etc/prometheus/prometheus.yml",
               "--storage.tsdb.path=/prometheus",
               "--web.enable-lifecycle"]
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-storage
          mountPath: /prometheus
        - name: etcd-tls
          mountPath: /etc/prometheus/tls/

      # Check https://hub.docker.com/r/jimmidyson/configmap-reload/tags/ for the current
      # stable version.
      - image: jimmidyson/configmap-reload:v0.2.2
        name: configmap-reload
        args: ["-webhook-url", "http://localhost:9090/-/reload",
               "-volume-dir", "/etc/prometheus"]
        resources:
          requests:
            memory: "400Mi"
            cpu: "200m"
          limits:
            memory: "400Mi"
            cpu: "200m"
        volumeMounts:
        # Mount the prometheus config volume so we can watch it for changes.
        - mountPath: /etc/prometheus
          name: prometheus-config

      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      # TODO: use native k8s persistent volume claims, if possible.
      - name: prometheus-storage
        hostPath:
          path: /mnt/local/prometheus
          type: Directory
      - name: etcd-tls
        secret:
          secretName: etcd-tls

      # TODO: use native k8s service entry points, if possible.
      hostNetwork: true
