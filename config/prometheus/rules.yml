groups:
- name: rules.yml
  rules:

## PlatformCluster

  ## CPU METRICS

  #  Calculates aggregate 1h rate of CPU usage for a DaemonSet across all
  #  machines.
  - record: daemonset:container_cpu_usage_seconds:sum_rate1h
    expr: |
      sum by (daemonset) (
        label_replace(
          rate (container_cpu_usage_seconds_total{
            container_label_io_kubernetes_container_name != "POD",
            container_label_io_kubernetes_container_name != "",
            machine=~"mlab[1-4].*",
            image != ""}
          [1h]),
          "daemonset", "$1", "container_label_io_kubernetes_pod_name", "^(.*)-[a-z0-9]+$"
        )
      )

  #  Calculates aggregate 1h rate of CPU usage for a DaemonSet across all
  #  machines as a ratio of all CPU cores on all machines.
  - record: daemonset:container_cpu_usage_seconds:ratio
    expr: |
      daemonset:container_cpu_usage_seconds:sum_rate1h
      / scalar(sum(machine_cpu_cores{machine=~"mlab[1-4].*"}))

  # Calculates aggregate DaemonSet CPU usage on a machine.
  - record: machine_daemonset:container_cpu_usage_seconds:sum_rate1h
    expr: |
      sum by (machine, daemonset) (
        label_replace(
          rate (container_cpu_usage_seconds_total{
            container_label_io_kubernetes_container_name != "POD",
            container_label_io_kubernetes_container_name != "",
            machine=~"mlab[1-4].*",
            image != ""}
          [1h]),
          "daemonset", "$1", "container_label_io_kubernetes_pod_name", "^(.*)-[a-z0-9]+$"
        )
      )

  # Calculates aggregate DaemonSet CPU usage on a node as a ratio of all CPU
  # cores on that machine.
  - record: machine_daemonset:container_cpu_usage_seconds:ratio
    expr: |
      machine_daemonset:container_cpu_usage_seconds:sum_rate1h
      / on(machine) group_left machine_cpu_cores


  ## MEMORY METRICS

  #  Calculates aggregate DaemonSet memory usage across all machines.
  - record: daemonset:container_memory_working_set_bytes:sum
    expr: |
      sum by (daemonset) (
        label_replace(
          container_memory_working_set_bytes{
            container_label_io_kubernetes_container_name != "POD",
            container_label_io_kubernetes_container_name != "",
            machine=~"mlab[1-4].*",
            image != ""
          },
          "daemonset", "$1", "container_label_io_kubernetes_pod_name", "^(.*)-[a-z0-9]+$"
        )
      )

  #  Calculates aggregate DaemonSet memory usage across all machines as a ratio of
  #  all memory on all machines.
  - record: daemonset:container_memory_working_set_bytes:ratio
    expr: |
      daemonset:container_memory_working_set_bytes:sum
      / scalar(sum(machine_memory_bytes{machine=~"mlab[1-4].*"}))

  # Calculates aggregate DaemonSet memory usage on a machine.
  - record: machine_daemonset:container_memory_working_set_bytes:sum
    expr: |
      sum by (machine, daemonset) (
        label_replace(
          container_memory_working_set_bytes{
            container_label_io_kubernetes_container_name != "POD",
            container_label_io_kubernetes_container_name != "",
            machine=~"mlab[1-4].*",
            image != ""
          },
          "daemonset", "$1", "container_label_io_kubernetes_pod_name", "^(.*)-[a-z0-9]+$"
        )
      )

  # Calculates aggregate DaemonSet memory usage on a machine as a ratio of all
  # memory on that machine.
  - record: machine_daemonset:container_memory_working_set_bytes:ratio
    expr: |
      machine_daemonset:container_memory_working_set_bytes:sum
      / on(machine) group_left machine_memory_bytes


  ## NETWORK METRICS
  #
  # These network metric expressions deliberately exclude the 'host' and
  # 'node-exporter' which run with hostNetwork=true. Because of this they
  # capture essentially all node network traffic, which duplicates regular
  # experiment metrics as well as being just generally not useful.

  # Calculates aggregate DaemonSet network trasmit bytes on the platform.
  - record: workload:container_network_transmit_bytes_total:sum
    expr: |
      sum by (container_label_workload) (
        rate(
          container_network_transmit_bytes_total{
            container_label_io_kubernetes_container_name = "POD",
            container_label_io_kubernetes_container_name != "",
            container_label_workload != "",
            container_label_workload !~ "(host|node-exporter)",
            machine =~ "mlab[1-4].*",
            image != ""
          }
        [1h]) * 8
      )
    )

  # Calculates aggregate DaemonSet network receive bytes on the platform.
  - record: workload:container_network_receive_bytes_total:sum
    expr: |
      sum by (container_label_workload) (
        rate(
          container_network_receive_bytes_total{
            container_label_io_kubernetes_container_name = "POD",
            container_label_io_kubernetes_container_name != "",
            container_label_workload != "",
            container_label_workload !~ "(host|node-exporter)",
            machine =~ "mlab[1-4].*",
            image != ""
          }
        [1h]) * 8
      )
    )

  # Calculates aggregate DaemonSet network trasmit bytes on a machine.
  - record: machine_workload:container_network_transmit_bytes_total:sum
    expr: |
      sum by (machine, container_label_workload) (
        rate(
          container_network_transmit_bytes_total{
            container_label_io_kubernetes_container_name = "POD",
            container_label_io_kubernetes_container_name != "",
            container_label_workload != "",
            container_label_workload !~ "(host|node-exporter)",
            machine =~ "mlab[1-4].*",
            image != ""
          }
        [1h]) * 8
      )
    )

  # Calculates aggregate DaemonSet network receive bytes on a machine.
  - record: machine_workload:container_network_receive_bytes_total:sum
    expr: |
      sum by (machine, container_label_workload) (
        rate(
          container_network_receive_bytes_total{
            container_label_io_kubernetes_container_name = "POD",
            container_label_io_kubernetes_container_name != "",
            container_label_workload != "",
            container_label_workload !~ "(host|node-exporter)",
            machine =~ "mlab[1-4].*",
            image != ""
          }
        [1h]) * 8
      )
    )
