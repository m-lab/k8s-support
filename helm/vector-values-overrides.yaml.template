customConfig:
  api:
    enabled: false
  data_dir: /tmp
  sinks:
    stackdriver:
      type: gcp_stackdriver_logs
      credentials_path: "/etc/vector/keys/vector.json"
      inputs:
      - kernel_log_filter
      - kubernetes_logs_filter
      project_id: {{PROJECT}}
      log_id: "${VECTOR_SELF_NODE_NAME}"
      resource:
        type: "generic_node"
        projectId: {{PROJECT}}
        location: {{PROJECT}}
        namespace: "${VECTOR_SELF_NODE_NAME}"
        node_id: "${VECTOR_SELF_NODE_NAME}"
  sources:
    journald:
      type: journald
    kubernetes_logs:
      type: kubernetes_logs
  transforms:
    kernel_log_filter:
      type: filter
      inputs:
      - journald
      # This catches anything with priority warning (4) to critical (0).
      condition: .SYSLOG_IDENTIFIER == "kernel" && includes(["0", "1", "2", "3", "4"], .PRIORITY)
    kubernetes_logs_filter:
      type: filter
      inputs:
      - kubernetes_logs
      # Filter logs from 3rd-party services and some logs from chatty sidecars
      condition: >-
        !match(string!(.kubernetes.container_name), r'(revtrvp|wehe|dash)') &&
        !match_any(string!(.message), [
          r'saver\.go:[0-9]+: (Cache|Closed|Closing|Missing|Starting)',
          r'command (finished|started|succeeded)',
          r'tcp\.go:[0-9]+: (Context|Create|Successfully)'
        ])
env:
- name: VECTOR_LOG
  value: info
extraVolumes:
- name: credentials
  secret:
    defaultMode: 420
    secretName: vector-credentials
- name: machine-id
  hostPath:
    path: /etc/machine-id
extraVolumeMounts:
- name: credentials
  mountPath: /etc/vector/keys
  readOnly: true
# The Vector journald source uses journalctl inside the container to read logs.
# journalctl constructs the path to the system journal using the contents of
# /etc/machine-id, so it must be mounted in the container, else journalctl will
# fail to find any log files.
- name: machine-id
  mountPath: /etc/machine-id
  readOnly: true
podAnnotations:
  prometheus.io/scrape: "true"
podLabels:
  workload: vector
role: Agent
securityContext:
  capabilities:
    add:
    - DAC_READ_SEARCH
    drop:
    - all
  runAsUser: 0
service:
  enabled: false
tolerations:
- key: node-role.kubernetes.io/control-plane
  effect: NoSchedule
