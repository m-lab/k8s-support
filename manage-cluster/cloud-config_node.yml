#cloud-config

packages:
- containerd
- ebtables
- iptables
- socat
- vim
package_update: true
package_upgrade: true

write_files:
- path: /etc/ssh/sshd_config
  permissions: 0600
  owner: root:root
  content: |
    Subsystem sftp internal-sftp
    ClientAliveInterval 180
    UseDNS no
    UsePAM yes
    PrintLastLog no # handled by PAM
    PrintMotd no # handled by PAM
    PasswordAuthentication no
    ChallengeResponseAuthentication no
    PermitRootLogin no

- path: /etc/modules
  permissions: 0644
  owner: root:root
  content: |
    overlay
    br_netfilter
    tcp_bbr

# The odd number of 999 because GCE nodes already have a file named
# 99-gce.conf, which, among other things, disables ip forwarding.
- path: /etc/sysctl.d/999-containerd.conf
  permissions: 0644
  owner: root:root
  content: |
    net.ipv4.ip_forward                 = 1
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1

# Configures the fq qdisc on boot. Note that all GCE VMs we create will be
# capable of 10g, even though we may choose to flag the site as 1g in siteinfo
# for other reasons.
- path: /etc/systemd/system/configure-tc-fq.service
  permissions: 0644
  owner: root:root
  content: |
    [Unit]
    Description=Configures TCP pacing
    After=multi-user.target
    [Service]
    Type=oneshot
    # The - in front of the file name indicates that if the file doesn't exist,
    # don't attempt to read it and don't emit and error.
    EnvironmentFile=-/run/net-iface
    # This is a fairly ugly way to get the device name of the default route
    # (which should be representative of the primary NIC device). The double
    # backslash in front of $5 is a requirement of systemd, since unit files can
    # contain escape sequences.
    ExecStartPre=/bin/bash -c 'echo IFACE=$(ip -o -4 route show default | awk "{print \\$5}") > /run/net-iface'
    ExecStart=tc qdisc replace dev $IFACE root fq maxrate 10gbit
    [Install]
    WantedBy=multi-user.target

runcmd:
- sysctl --system
- systemctl restart systemd-modules-load.service
- systemctl enable containerd
- systemctl start containerd
- systemctl start configure-tc-fq.service
